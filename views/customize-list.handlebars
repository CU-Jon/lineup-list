<h2>Customize your {{festival.display_name}} {{festival.year}} lineup</h2>
<form class="pure-form" id="listOptionsForm" action="/generate-lineup-list" method="POST" style="display: flex; flex-direction: column; max-width: 50%;">
    <div id="formContent" style="display: flex; flex-direction: row; justify-content: space-between;">
        <div id="filters" style="max-width: 40%;">
            <div style="display: flex; flex-direction: column;">
                <h3 style="margin-bottom: 0;">Playlist Options</h3>
                <p style="font-size: smaller; margin-top: 0;">These settings affect the makeup of your generated playlist</p>

                <div style="margin-bottom: 1rem; display: flex; flex-direction: column;">
                    <u>Tracks per artist</u>
                    <p style="margin-top: 0; font-size: smaller;">Number of tracks for each artist on the playlist</p>
                    <input type="number" name="tracksPerArtist" value="3" style="flex: 0; max-width: 30%;" required>
                </div>

                <div style="margin-bottom: 1rem; display: flex; flex-direction: column;">
                    <u>Track type</u>
                    <p style="margin-top: 0; font-size: smaller;">How the tracks are selected for each artist. Top tracks are the most popular, while newest tracks pulls from their most recently released music.</p>
                    <label for="top" class="pure-checkbox">
                        <input type="radio" name="trackType" id="top" value="top" checked>
                        Top tracks</label>
                    <label for="recent" class="pure-checkbox">
                        <input type="radio" name="trackType" id="recent" value="recent">
                        Newest tracks</label>
                </div>
            </div>

            <h3 style="margin-bottom: 0;">Filters</h3>
            <p style="font-size: smaller; margin-top: 0;">Adjusting these filters affects the artists on the right. The brighter the artist, the better of a match they are. </p>

            <div style="display: flex; flex-direction: column; margin-top: 1rem;">
                <div style="margin-bottom: 1rem;">
                    <u>Festival Day</u>
                    {{#if (gt days.length 1)}}
                        {{#each days}}
                        <div>
                            <label for="{{this}}" class="pure-checkbox">
                            <input class="dayCheckbox" id="{{this}}" type="checkbox" value="{{this}}" onchange="refreshArtistList()" checked>
                            {{this}}</label>
                        </div>
                        {{/each}}
                    {{else}}
                        <p style="font-size: smaller; margin-top: 0;">Single day lineups not released for this festival yet.</p>
                    {{/if}}
                </div>

                <div style="margin-bottom: 1rem;">
                    <u>Main Genres</u>
                    <p style="font-size: smaller; margin-top: 0;">Common genres shared between many artists. Filtering by these will cause the largest impact</p>
                    {{#each mainGenres}}
                        <label for="{{this}}" class="pure-checkbox">
                            <input class="mainGenreCheckbox" id="{{this}}" type="checkbox" value="{{this}}" onchange="refreshArtistList()" checked>
                            {{this}}</label>
                    {{/each}}
                </div>

                <div style="margin-top: 1rem;">
                    <u>Misc. Genres</u>
                    <p style="font-size: smaller; margin-top: 0;">Uncommon genres not easily grouped into a main genre. These might be specific to certain artists and can be used to fine-tune the results.</p>
                    <label for="uncheckAllSpecificGenres" class="pure-checkbox">
                        <input type="checkbox" id="uncheckAllSpecificGenres" onchange="uncheckAllSpecificGenresChanged()" checked>
                        Check/Uncheck all misc. genres</label>
                    {{#each specificGenres}}
                    <label for="{{this}}" class="pure-checkbox">
                        <input class="specificGenreCheckbox" id="{{this}}" type="checkbox" value="{{this}}" onchange="refreshArtistList()"  checked>
                        {{this}}</label>
                    {{/each}}
                </div>
            </div>
        </div>

        <div id="includedArtists" style="max-width: 40%;">
            <h3 style="margin-bottom: 0;">Artists</h3>
            <p style="font-size: smaller; margin-top: 0;">All checked artists will be included in the final lineup. Uncheck any remaining artists to exclude them from the final lineup</p>
                {{#each artists}}
                    <label for="{{this.id}}-checkbox" id="{{this.id}}-label" class="pure-checkbox">
                    <input class="artistCheckbox" id="{{this.id}}-checkbox" type="checkbox" value="{{this.id}}" data-genres="{{stringify this.combined_genres}}" data-day="{{this.day}}" checked>
                    {{this.name}}</label>
                {{/each}}
        </div>
    </div>
    <input type="hidden" id="artistIds" name="artistIds">
    <input type="hidden" name="festivalName" value="{{festival.name}}">
    <input type="hidden" name="festivalDisplayName" value="{{festival.display_name}}">
    <input type="hidden" name="festivalYear" value="{{festivalYear}}">
    <input class="pure-button pure-button-primary" style="margin: 1rem; align-self: center;" type="submit" value="Generate">
</form>

<script>
var form = document.getElementById("listOptionsForm");
form.addEventListener("submit", function() {
    var artists = document.getElementsByClassName("artistCheckbox");

    var artistIds = [];
    for (var i = 0; i < artists.length; i++) {
        // Need to check if parent div is hidden since genre filtering hides checkbox/p div wrapper
        var parentDiv = artists[i].parentElement;
        if (artists[i].checked && parentDiv.style.display !== "none") {
            artistIds.push(artists[i].value);
        }
    }

    var artistIdsInput = document.getElementById("artistIds");
    if (artistIds.length === 0) {
        // Don't send the empty query param
        artistIdsInput.name = '';
    } else {
        // Reset the name in case we came back and unchecked an artist(s)
        artistIdsInput.name = 'artistIds';
        artistIdsInput.value = artistIds.join(',');
    }
});
</script>
<script>
function refreshArtistList() {
    var artists = document.getElementsByClassName("artistCheckbox");
    var mainGenres = document.getElementsByClassName("mainGenreCheckbox");
    var specificGenres = document.getElementsByClassName("specificGenreCheckbox");
    var days = document.getElementsByClassName("dayCheckbox");
    var allGenres = [];
    allGenres = Array.prototype.concat.apply(allGenres, mainGenres);
    allGenres = Array.prototype.concat.apply(allGenres, specificGenres);

    var selectedGenres = Array.prototype.slice.call(allGenres)
    .filter(x => x.checked)
    .map(x => x.value);

    var selectedDays = Array.prototype.slice.call(days)
        .filter(x => x.checked)
        .map(x => x.value);

    for (var i = 0; i < artists.length; i++) {
        var artistGenres = JSON.parse(artists[i].getAttribute("data-genres"));
        var artistDay = artists[i].getAttribute("data-day");

        // make sure we hide or show the whole div containing checkbox and name
        var artistLabel = document.getElementById(artists[i].value + "-label");
        var artistCheckbox = document.getElementById(artists[i].value + "-checkbox");
        var opacity = getArtistOpacity(selectedGenres, artistGenres);
        artistLabel.style.opacity = opacity;
        artistCheckbox.style.opacity = opacity;

        var noDayMatch = days.length > 0 && (selectedDays.length == 0 || !selectedDays.includes(artistDay));
        var noGenreMatch = artistGenres.length > 0 && !artistGenres.some(x => selectedGenres.includes(x));
        if (noGenreMatch || noDayMatch) {
            artistLabel.style.display = "none";
            artistCheckbox.style.display = "none";
        } else {
            // Let class style take back over
            artistLabel.style.display = "";
            artistCheckbox.style.display = "";
        }
    }
}

function getArtistOpacity(selectedGenres, artistGenres) {
    var artistGenresCount = artistGenres.length;
    var selectedArtistGenresCount = artistGenres.reduce((total, currentGenre) => {
        if (selectedGenres.includes(currentGenre)) {
            total++;
        }
        return total;
    }, 0);

    return selectedArtistGenresCount / artistGenresCount;
}

function uncheckAllSpecificGenresChanged() {
    var checkbox = document.getElementById("uncheckAllSpecificGenres");
    var specificGenres = document.getElementsByClassName("specificGenreCheckbox");
    var isChecked = checkbox.checked;
    for (var i = 0; i < specificGenres.length; i++) {
        specificGenres[i].checked = isChecked;
    }

    refreshArtistList();
}
</script>
